<!-- sample configuration file for DatabaseAnalyzer -->

<database-analyzer>

<!-- settings related to test database loading -->
<test-database>

<!-- folder where test database is located -->
<!-- you can download sample test database from sourceforge download area -->
<!-- this entry can appear here multiple times, multiple test databases are internally merged -->
<scan>TestDatabase</scan>

<!-- test database limits, any sample images beyond these limits will be ignored -->

<!-- max. number of databases, database here means collection of fingerprints from single source -->
<database-count>15</database-count>

<!-- max. number of fingers per database, one finger may have multiple views (scans) -->
<fingers-per-database>100</fingers-per-database>

<!-- max. number of views (scans) per finger -->
<views-per-finger>10</views-per-finger>

</test-database>

<!-- extractor options -->
<extractor-benchmark>

<!-- cancel extraction process when this time limit is reached -->
<max-seconds>1800</max-seconds>

</extractor-benchmark>

<!-- matcher options -->
<matcher-benchmark>

<!-- maximum number of matching pairs considered for every fingerprint in database -->
<max-matching-pairs>10</max-matching-pairs>

<!-- maximum number of non-matching pairs considered for every fingerprint in database -->
<max-non-matching-pairs>1000</max-non-matching-pairs>

<!-- render ROC graph, set this to false to get reports faster -->
<render-graph>true</render-graph>

<!-- generate combined score table and ROC data points in XML format, set this to false to get reports faster -->
<write-score-tables>false</write-score-tables>

</matcher-benchmark>

<!-- optimizer options -->
<optimizer>

<!-- name of parameter that should be tuned first, several <mutate> tags can appear here -->
<!-- <mutate>Extractor.GapRemover.GapAngle</mutate> -->

</optimizer>

<!-- action to take, available actions: -->
<!-- extractor-benchmark - run extraction over all images, store reports under Extractor folder -->
<!-- matcher-benchmark - run matching over templates from Extractor/Templates.dat, store reports under Matcher folder -->
<!-- optimizer - optimize algorithm parameters through simple hill climbing search, save reports under Optimizer folder -->
<action>matcher-benchmark</action>

</database-analyzer>

